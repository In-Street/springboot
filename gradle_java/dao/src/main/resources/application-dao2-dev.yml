spring:
  redis:
    host: 39.106.118.71
    password: 68A61C323A3452544C4AEF6296D8BD95A
    port: 6380

#   单库水平拆分 +  读写分离
  shardingsphere:
    #主从数据源
    datasource:
      names: master,slave
      master:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://39.106.118.71/ds_0?characterEncoding=utf-8
        username: slave
        password: slave@2019

      slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://211.159.175.105/ds_0?characterEncoding=utf-8
        username: slave
        password: slave@2019

    sharding:
      #表水平拆分
      tables:
        # record : 逻辑表名，在xml中 所有操作不明确指定操作的表名，使用逻辑表名 [eg: insert into record xxx ,而不是 insert into record0/record1 xxx ]
        record:
          actual-data-nodes: ds0.record$->{0..1}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: record$->{id.longValue() % 2}
          key-generator:
            column: id
            #id:生成算法 SNOWFLAKE/UUID/LEAF_SEGMEN
            type: SNOWFLAKE
      master-slave-rules:
        ds0:
          master-data-source-name: master
          slave-data-source-names: slave